// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String? // Nullable, as email might not be provided
  username    String      @unique
  password    String
  accessLevel ACCESSLEVEL
  testId      String?
}

model ClassInfo {
  classId         String           @id @default(uuid())
  classCode       String
  schedule        String
  professor       ProfessorInfo?   @relation(fields: [professorInfoId], references: [profID])
  professorInfoId String?
  enrollments     Enrollment[]
  // Grades          Grades[]
  GradesTemplate  GradesTemplate[]
}

model StudentInfo {
  studentId     String          @id @default(uuid())
  studentName   String
  studentEmail  String
  enrollments   Enrollment[]
  StudentGrades StudentGrades[]
}

model ProfessorInfo {
  profID     String      @id @default(uuid())
  profName   String
  department String
  email      String?
  classes    ClassInfo[]
}

model Enrollment {
  enrollmentId  String      @id @default(uuid())
  classInfo     ClassInfo   @relation(fields: [classInfoId], references: [classId])
  classInfoId   String
  studentInfo   StudentInfo @relation(fields: [studentInfoId], references: [studentId])
  studentInfoId String
}

// model Grades {
//   id          String      @id @default(uuid())
//   field       String
//   value       Float
//   studentInfo StudentInfo @relation(fields: [studentInfoStudentId], references: [studentId])
//   ClassInfo            ClassInfo? @relation(fields: [classInfoClassId], references: [classId])
//   classInfoClassId     String?
//   studentInfoStudentId String
// }

model GradesTemplate {
  id          String     @id @default(uuid())
  title       String
  percentage  Float
  classInfo   ClassInfo? @relation(fields: [classInfoId], references: [classId])
  classInfoId String?

  gradeId       String?
  symetricGrade GradesTemplate[] @relation("GradingInfo")
  Grades        GradesTemplate[] @relation("GradingInfo")
  StudentGrades StudentGrades[]
}

model StudentGrades {
  id    String @id @default(uuid())
  value Float

  GradeTemplate    GradesTemplate @relation(fields: [gradesTemplateId], references: [id])
  gradesTemplateId String
  studentInfo      StudentInfo    @relation(fields: [studentInfoId], references: [studentId])
  studentInfoId    String
}

model ClassroomInfo {
  roomID     String @id @default(uuid())
  roomNumber String
}

enum ACCESSLEVEL {
  ADMIN
  STUDENT
  INSTRUCTOR
}
